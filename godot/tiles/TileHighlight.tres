[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeVec3Uniform" id=1]
uniform_name = "highlight_amount"

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2

[sub_resource type="VisualShaderNodeColorConstant" id=3]
constant = Color( 1, 1, 0, 1 )

[sub_resource type="VisualShaderNodeVectorInterp" id=4]

[resource]
code = "shader_type canvas_item;
uniform vec3 highlight_amount;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Color:5
	vec3 n_out5p0 = vec3(1.000000, 1.000000, 0.000000);
	float n_out5p1 = 1.000000;

// VectorUniform:10
	vec3 n_out10p0 = highlight_amount;

// VectorMix:6
	vec3 n_out6p0 = mix(n_out3p0, n_out5p0, n_out10p0);

// Output:0
	COLOR.rgb = n_out6p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, -159.935 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 1180, 20 )
nodes/fragment/0/position = Vector2( 1820, 160 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 1140, 40 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( 1360, -60 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 1560, 20 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 1200, 220 )
nodes/fragment/connections = PoolIntArray( 3, 1, 0, 1, 6, 0, 0, 0, 10, 0, 6, 2, 3, 0, 6, 0, 5, 0, 6, 1 )
